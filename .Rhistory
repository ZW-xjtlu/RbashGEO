PCDB = phastCons100way.UCSC.hg19,
plot_title = "Distribution of the phastCons100ways scores",
plot_subtitle = "QNB result, bin size = 1")
PhastCons_distribution(DM_List,
PCDB = phastCons100way.UCSC.hg19,
plot_title = "Distribution of the phastCons100ways scores",
plot_subtitle = "QNB result, bin size = 201")
Motif_enrichment_exons <- function(grl_x,Motif,DNA_ss,TXDB) {
#1.Select adequate background (only those transcripts that mapped to the query)
exons_txdb <- exonsBy(TXDB,by = "tx")
exons_sub <- subsetByOverlaps( exons_txdb, grl_x )
motif_idx <- Motif %over% exons_sub
motif_sub = Motif[motif_idx]
DNA_SS_sub = DNA_ss[motif_idx]
Background = table(DNA_SS_sub)
fol <- findOverlaps(grl_x,motif_sub)
Observed = table(DNA_SS_sub[unique(subjectHits(fol))])
Sum_bg = sum(Background)
Sum_obs = sum(Observed)
test_list <- lapply(names(Background),
function(x){
Observed_pattern <- Observed[x]
if (is.na(Observed_pattern)) Observed_pattern = 0
test.matrix = rbind(c(Observed_pattern,Sum_obs - Observed_pattern),
c(Background[x],Sum_bg - Background[x]))
ftest = fisher.test(test.matrix)
c(x,ftest$estimate,ftest$conf.int,ftest$p.value)
})
test_matrix <- Reduce("rbind",test_list)
colnames(test_matrix) = c("Motif","OddsRatio","CI_lower","CI_higher","pvalue")
test_df = as.data.frame(test_matrix)
test_df = test_df[order(test_df$OddsRatio,decreasing = T),]
test_df$fdr = p.adjust( as.numeric(as.character(test_df$pvalue)) , method = "fdr")
rownames(test_df) = NULL
return(test_df)
}
library(BSgenome.Hsapiens.UCSC.hg19)
Reduce("c",DM_List)
bs_gn_views <- Views(Hsapiens,Reduce("c",DM_List))
DNA_SS <- DNAStringSet(bs_gn_views)
idx_N <- vcountPattern(DNAString("N"),DNA_SS)
subset <- Motif_general[!idx_N > 0]
subset <- Reduce("c",DM_List)[!idx_N > 0]
bs_gn_views <- Views(Hsapiens,subset)
DNA_SS <- DNAStringSet(bs_gn_views)
Motif_enrichment_exons(DM_List$Hypo_fdr,subset,DNA_SS,TXDB) %>% datatable
library(dplyr)
Motif_enrichment_exons(DM_List$Hypo_fdr,subset,DNA_SS,TXDB) %>% datatable
TXDB = TxDb.Hsapiens.UCSC.hg19.knownGene
Motif_enrichment_exons(DM_List$Hypo_fdr,subset,DNA_SS,TXDB) %>% datatable
library(DT)
Motif_enrichment_exons(DM_List$Hypo_fdr,subset,DNA_SS,TXDB) %>% datatable
bs_gn_views <- Views(Hsapiens,Reduce("c",DM_List) - 98)
DNA_SS <- DNAStringSet(bs_gn_views)
idx_N <- vcountPattern(DNAString("N"),DNA_SS)
subset <- Reduce("c",DM_List)[!idx_N > 0] - 98
bs_gn_views <- Views(Hsapiens,subset)
DNA_SS <- DNAStringSet(bs_gn_views)
TXDB = TxDb.Hsapiens.UCSC.hg19.knownGene
Motif_enrichment_exons(DM_List$Hypo_fdr - 98,subset,DNA_SS,TXDB) %>% datatable
Motif_enrichment_exons(DM_List$Hypo_p - 98,subset,DNA_SS,TXDB) %>% datatable
?write
Genes_ID(Gr,Save_dir,TXDB){
Genes_ID(Gr,Save_dir,TXDB){
Genes_ID <- function(Gr,Save_dir,TXDB) {
write(names(subsetByOverlaps(genes(TXDB),Gr)),Save_dir)
}
Genes_ID(DM_List$Hypo_fdr,"Hypo_fdr.txt",TxDb.Hsapiens.UCSC.hg19.knownGene)
Genes_ID(Reduce("c",DM_List),"Back_ground.txt",TxDb.Hsapiens.UCSC.hg19.knownGene)
binom.test(144,7645-144)
dim(countMatrix)
ifelse(T,"shit","s")
silhouette
?silhouette
??silhouette
knitr::opts_chunk$set(echo = TRUE)
require(guitar)
require(ggplot2)
require(GenomicFeatures)
require(Guitar)
require(rBS2ndStructure)
save_dir = getwd()
if (file.exists()){save_title}else{dir.create(save_title = "experiment")}
save_title = "experiment"
if (file.exists(save_title)){}else{dir.create(save_title)}
list.files()
setwd(save_dir)
if (file.exists(save_title)){}else{dir.create(save_title)}
setwd(save_title)
getwd()
setwd(save_dir)
if (file.exists(save_title)){}else{dir.create(save_title)}
setwd(save_title)
getwd()
se <- "/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/Gr_mm10_normal_50.rds"
se
se <- readRDS( "/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/Gr_mm10_normal_50.rds" )
head(assays(se)[[1]])
head(assays(se))
se <- readRDS( "/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/Gr_mm10_normal_50.rds" )
class(se)
se <- readRDS( "/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/Count_results" )
se <- readRDS( "/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/Count_results/PE_mm10_50-N.rds" )
assays(se)[[1]]
IP_colnames = c("SRR1182670.bam","SRR1182671.bam")
input_colnames = c("SRR1182672.bam","SRR1182673.bam")
Meth_count <- assays(se)[[1]][,c(IP_colnames,input_colnames)]
col.data = data.frame(
sample.id = c(IP_colnames,input_colnames),
condition = rep(
c("IP","Input"),
c(length(IP_colnames),
length(input_colnames))
)
)
col.data
head(Meth_count)
dds <- DESeqDataSetFromMatrix(Meth_count, col.data, design=~condition)
require(DESeq2)
dds <- DESeqDataSetFromMatrix(Meth_count, col.data, design=~condition)
dds$type <- factor(col.data$condition)
dds$type <- relevel(dds$type, "Input") #Control as the denominator of the FC
design(dds) <- ~ type
dds <- DESeq(dds)
dds
dds_rst <- results(dds)
head(dds_rst)
mean(is.na(dds_rst$padj))
mean(dds_rst$padj < .05)
mean(na.omit(dds_rst$padj) < .05)
mean(na.omit(dds_rst$pvalue) < .05)
dds_rst <- dds_rst[!is.na(dds_rst$log2FoldChange),]
head(dds_rst)
mean(is.na(dds_rst$padj))
dim(dds_rst)
which(dds_rst$padj > 1)
length(which(dds_rst$padj > 1))
ds2_rslt = dds_rst
filter_col = "stat"
filter_val = ".05"
filter_col = "pvalue"
ds2_rslt[[filter_col]]
which( ds2_rslt[[filter_col]] < filter_val )
filter_val
idx <- which( ds2_rslt[[filter_col]] < as.numeric(filter_val) )
log2FC <- dds_rst$log2FoldChange
log2FC
sum((log2FC > 0)[idx])
sum((log2FC < 0)[idx])
number_meth <- sum((log2FC > 0)[idx])
number_nons <- sum((log2FC < 0)[idx])
vec_r <- c(filter_col,filter_val,length(idx),(log2FC > 0)[idx],number_meth,number_nons)
vec_r
vec_r <- c(filter_col,filter_val,length(idx),number_meth,number_nons)
vec_r
vec_r <- c(filter_col,filter_val,number_meth,number_nons,number_meth/number_nons)
vec_r
names(vec_r) = c("filter-by","cut-off","Meth-num","Nons-num","Meth2Nons-r")
vec_r
idx <- which( ds2_rslt[[filter_col]] < as.numeric(filter_val) )
log2FC <- dds_rst$log2FoldChange
number_meth <- sum((log2FC > 0)[idx])
number_nons <- sum((log2FC < 0)[idx])
vec_r <- c(filter_col,filter_val,number_meth,number_nons,round(number_meth/number_nons,3))
names(vec_r) = c("filter-by","cut-off","Meth-num","Nons-num","Meth2Nons-r")
dds_rst_stat <- function(ds2_rslt,filter_col,filter_val){
idx <- which( ds2_rslt[[filter_col]] < as.numeric(filter_val) )
log2FC <- dds_rst$log2FoldChange
number_meth <- sum((log2FC > 0)[idx])
number_nons <- sum((log2FC < 0)[idx])
vec_r <- c(filter_col,filter_val,number_meth,number_nons,round(number_meth/number_nons,3))
names(vec_r) = c("filter-by","cut-off","Meth-num","Nons-num","Meth2Nons-r")
vec_r
}
dds_rst$pvalue
dds_rst$padj
dds_rst_stat(dds_rst,"padj",".01")
dds_rst_stat(dds_rst,"pvalue",".05")
dds_rst_stat(dds_rst,"pvalue",".1")
dds_rst_stat(dds_rst,"padj",".001")
dds_rst_stat(dds_rst,"padj","0")
expand.grid(c("pvalue,padj"),c(".1",".05",".01",".001"))
dds_rst_stat(dds_rst,"padj",".01")
expand.grid(c("pvalue,padj"),c(".1",".05",".01",".001"))
expand.grid(c("pvalue","padj"),c(".1",".05",".01",".001"))
expand.grid(c("pvalue","padj"),c(".1",".05",".01",".001"))
egrid <- expand.grid(c("pvalue","padj"),c(".1",".05",".01",".001"))
egrid[order(egrid$Var1),]
egrid <- egrid[order(egrid$Var1),]
egrid
egrid <- expand.grid(c("pvalue","padj"),c(".1",".05",".01",".001"))
egrid <- egrid[order(egrid$Var1),]
egrid
?Map
dds_rst_stat <- function(filter_col,filter_val,ds2_rslt){
idx <- which( ds2_rslt[[filter_col]] < as.numeric(filter_val) )
log2FC <- dds_rst$log2FoldChange
number_meth <- sum((log2FC > 0)[idx])
number_nons <- sum((log2FC < 0)[idx])
vec_r <- c(filter_col,filter_val,number_meth,number_nons,round(number_meth/number_nons,3))
names(vec_r) = c("filter-by","cut-off","Meth-num","Nons-num","Meth2Nons-r")
vec_r
}
Map(dds_rst_stat,egrid$Var1,egrid$Var2,ds2_rslt = dds_rst)
dds_rst_stat <- function(filter_col,filter_val,ds2_rslt){
idx <- which( ds2_rslt[[filter_col]] < as.numeric(filter_val) )
log2FC <- dds_rst$log2FoldChange
number_meth <- sum((log2FC > 0)[idx])
number_nons <- sum((log2FC < 0)[idx])
vec_r <- c(filter_col,filter_val,number_meth,number_nons,round(number_meth/number_nons,3))
names(vec_r) = c("filter-by","cut-off","Meth-num","Nons-num","Meth2Nons-r")
vec_r
}
Map(dds_rst_stat,egrid$Var1,egrid$Var2,ds2_rslt = dds_rst)
egrid$Var1
Map(dds_rst_stat,as.character(egrid$Var1),as.character(egrid$Var2),ds2_rslt = dds_rst)
as.character(egrid$Var1)
as.character(egrid$Var2)
dds_rst_stat
Map(function(x,y) dds_rst_stat(x,y,ds2_rslt = dds_rst),as.character(egrid$Var1),as.character(egrid$Var2))
report_m <- Reduce("rbind",Map(function(x,y) dds_rst_stat(x,y,ds2_rslt = dds_rst),
as.character(egrid$Var1),
as.character(egrid$Var2)))
report_m
156200092/2811528562
SRRs_2T3L1 <- c(
paste0("SRR",1048180:1048183),
paste0("SRR",1575981:1575984)
)
SRRs_2T3L1
knitr::opts_chunk$set(echo = TRUE)
SRRs_2T3L1 <- c(
paste0("SRR",1048180:1048183,"_rmdup"),
paste0("SRR",1575981:1575984,"_rmdup")
)
Count_New <- readRDS("/Users/weizhen/Desktop/Research/TREW\ conservation/8.\ Quality-Control/3.\ ReCount\ 3T3L3/3T3L1_50-N.rds")
gr_mm10_N <- readRDS("/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/Gr_mm10_normal_50.rds") - 50
coord_mm10 <- readRDS("~/GuitarCoords_mm10.rds")
Count_New <- assays(readRDS("/Users/weizhen/Desktop/Research/TREW\ conservation/8.\ Quality-Control/3.\ ReCount\ 3T3L3/3T3L1_50-N.rds"))[[1]]
coldata_mm10 <- read.csv("/Users/weizhen/Desktop/Research/TREW\ conservation/7.\ Prepare\ For\ New\ counts/coldata_mm10.csv")
coldata_mm10
library(m6Aqc)
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_mm10[c(13:20),],
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
coldata_new <- coldata_mm10[c(13:20),]
coldata_new$Accession = paste0( coldata_new$Accession, "_rmdup")
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_mm10[c(13:20),],
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
coldata_new$Accession = paste0( coldata_new$Accession, "_rmdup")
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_mm10[c(13:20),],
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
coldata_new
coldata_new <- coldata_mm10[c(13:20),]
coldata_new$Accession = paste0( coldata_new$Accession, "_rmdup")
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_new,
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
IUPAC
library(BSgenome)
IUPAC_CODE_MAP
knitr::opts_chunk$set(echo = TRUE)
library(BSgenome.Hsapiens.UCSC.hg19.masked)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb = TxDb.Hsapiens.UCSC.hg19.knownGene
all_hg19_tx <- transcripts(txdb)
tx_views <- Views(Hsapiens,all_hg19_tx)
head(tx_views)
sum(width(all_hg19_tx))
sum(as.numeric(width(all_hg19_tx)))
sum(as.numeric(width(reduce( all_hg19_tx ))))
sum(as.numeric(width(reduce( all_hg19_tx ))))/4
all_hg19_ex <- exons(txdb)
sum(as.numeric(width(reduce( all_hg19_ex ))))/4
sum(as.numeric(width(reduce( all_hg19_tx ))))/50
sum(as.numeric(width(reduce( all_hg19_ex ))))/50
paste0("SRR",c(1744126,5248992:5248999)
)
Meth_M <- QC_se(se_M_hg19_50_N,
gr_hg19_N,
coldata_hg19[c(37:38,45:46),],
txdb = TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene,
struc_Gr = rBS2ndStructure::Struc_hg19,
write_directory = "hg19_50_sites5000",
gt_coord = coord_hg19,
min_num_M = 5000,
min_num_N = 5000
)
Fastq_directory = /home/zhen/m6A_virus/raw/
Fastq_directory = "/home/zhen/m6A_virus/raw/"
gsub("/$","",Fastq_directory)
Faseq_file_name = "SRR1234567.fastq"
Fastq_directory = "."
Fastq_file_end = ".fastq"
Faseq_file_name = "SRR1234567"
paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end)
paste0( " -U ",Fastq_directory,"/",Faseq_file_name,Fastq_file_end)
indx_directory = "/home/zhen/hisat2_idx/hg19/genome"
trim_argument
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
trim_5 = NULL
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
trim_argument
trim_5 = 10
trim_3 = 6
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
trim_argument
output_argument = paste0(Faseq_file_name,".sam")
paste0(hisat2," -p ",parallel_num, trim_argument," --tmo --no-unal")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal")
parallel_num = 8
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal")
output_argument = paste0(" -S ",Faseq_file_name,".sam")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
input_argument = paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_2",Fastq_file_end)
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
mapply()
?/home/zhen/TREW_new_data
?mapply
Rhisat2 <- function (Fastq_file_name = "SRR1234567",
indx_directory = "/home/zhen/hisat2_idx/hg19/genome",
Fastq_directory = ".",
Paired = F,
trim_5 = NULL,
trim_3 = NULL,
parallel_num = 8,
Fastq_file_end = ".fastq",)
Rhisat2 <- function (Fastq_file_name = "SRR1234567",
indx_directory = "/home/zhen/hisat2_idx/hg19/genome",
Fastq_directory = ".",
Paired = F,
trim_5 = NULL,
trim_3 = NULL,
parallel_num = 8,
Fastq_file_end = ".fastq")
{
Fastq_directory = gsub("/$","",Fastq_directory)
if (Paired) {
input_argument = paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_2",Fastq_file_end)
}
else {
input_argument = paste0( " -U ",Fastq_directory,"/",Faseq_file_name,Fastq_file_end)
}
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
output_argument = paste0(" -S ",Faseq_file_name,".sam")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
}
Rhisat2
arg_df <- data.frame(
Fastq_file_name = Rep("SRR1744126",2),
trim_5 = 16,
trim_3 = 12
)
arg_df <- data.frame(
Fastq_file_name = rep("SRR1744126",2),
trim_5 = 16,
trim_3 = 12
)
arg_df
Rhisat2 <- function (Fastq_file_name = "SRR1234567",
indx_directory = "/home/zhen/hisat2_idx/hg19/genome",
Fastq_directory = ".",
Paired = F,
trim_5 = NULL,
trim_3 = NULL,
parallel_num = 8,
Fastq_file_end = ".fastq",
output_name = Fastq_file_name)
{
Fastq_directory = gsub("/$","",Fastq_directory)
if (Paired) {
input_argument = paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_2",Fastq_file_end)
}
else {
input_argument = paste0( " -U ",Fastq_directory,"/",Faseq_file_name,Fastq_file_end)
}
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
output_argument = paste0(" -S ",output_name,".sam")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
}
Rhisat2(
)
Rhisat2(
)
paste0("SRR1744126_",1:2)
arg_df <- data.frame(
Fastq_file_name = rep("SRR1744126",3),
trim_5 = c(16,16,0),
trim_3 = c(12,0,12),
output_name = paste0("SRR1744126_",1:3)
)
arg_df
library(dplyr)
apply(
arg_df,1,
function(x)
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data") #%>% Rnohup(.,paste0(x,"_hisat2") )
)
apply(
arg_df,1,colnames)
apply(
arg_df,1,function(x)x)
apply(
arg_df,1,function(x)colnames(x))
apply(
arg_df,1,function(x)rownames(x))
?Map
Map
arg_df[1,]
for(i in 1:nrow(arg_df)) {
x = arg_df[i,]
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data") %>% Rnohup(.,paste0(x,"_hisat2") )
}
for(i in 1:nrow(arg_df)) {
x = arg_df[i,]
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data") #%>% Rnohup(.,paste0(x,"_hisat2") )
}
x = arg_df[i,]
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data")
list.files()
grep("html",list.files(),value = T)
grep("html",list.files(),value = T)
gsub(".fastq","",grep(".fastq",list.files(),value = T) )
gsub(".fastq","",grep(".fastq$",list.files(),value = T) )
tune_Mismatch_MX = 4
tune_Mismatch_MN = 6
ifelse(is.null(tune_Mismatch_MX),"",paste0("--mp ",tune_Mismatch_MX,",",tune_Mismatch_MN))
head(lst_result)
package.skeleton("RbashGEO",c(lsf.str()),path = "/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing")
setwd("/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing/RbashGEO")
sapply(c("dplyr"),devtools::use_package)
WgetQC <- function (GEO_accession = "SRR1234567", Paired = F)
{
URL = paste("ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR",
substr(GEO_accession, 1, 6), GEO_accession, paste0(GEO_accession,
".sra"), sep = "/")
Wget_command = paste("wget -c -t 0", URL)
fastq_dump_command = paste0("fastq-dump ", ifelse(Paired,
"--split-3 ", ""), GEO_accession, ".sra")
if (Paired) {
fastqc_command = paste0("fastqc ", GEO_accession, "_1.fastq",
";", "fastqc ", GEO_accession, "_2.fastq")
}
else {
fastqc_command = paste0("fastqc ", GEO_accession, ".fastq")
}
paste(Wget_command, fastq_dump_command, fastqc_command, sep = ";")
}
WgetQC <- function (GEO_accession = "SRR1234567", Paired = F)
{
URL = paste("ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR",
substr(GEO_accession, 1, 6), GEO_accession, paste0(GEO_accession,
".sra"), sep = "/")
Wget_command = paste("wget -c -t 0", URL)
fastq_dump_command = paste0("fastq-dump ", ifelse(Paired,
"--split-3 ", ""), GEO_accession, ".sra")
if (Paired) {
fastqc_command = paste0("fastqc ", GEO_accession, "_1.fastq",
";", "fastqc ", GEO_accession, "_2.fastq")
}
else {
fastqc_command = paste0("fastqc ", GEO_accession, ".fastq")
}
rm_command = paste0("rm ", GEO_accession, ".sra")
paste(Wget_command, fastq_dump_command, rm_command, fastqc_command, sep = ";")
}
Rnohup <- function(command,output = "X") {
write(command,paste0(output,".sh"))
system(paste0("chmod +x ./", paste0(output,".sh")))
system(paste0("nohup ./",paste0(output,".sh"), ifelse(is.null(output),"",paste0(" > ",output,".out"))," &"))
}
package.skeleton("RbashGEO",c(lsf.str()),path = "/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing")
setwd("/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing/RbashGEO")
sapply(c("dplyr"),devtools::use_package)
