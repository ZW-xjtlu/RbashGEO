write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
coldata_new <- coldata_mm10[c(13:20),]
coldata_new$Accession = paste0( coldata_new$Accession, "_rmdup")
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_mm10[c(13:20),],
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
coldata_new$Accession = paste0( coldata_new$Accession, "_rmdup")
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_mm10[c(13:20),],
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
coldata_new
coldata_new <- coldata_mm10[c(13:20),]
coldata_new$Accession = paste0( coldata_new$Accession, "_rmdup")
Meth_M <- QC_se(Count_New,
gr_mm10_N,
coldata_new,
txdb = TxDb.Mmusculus.UCSC.mm10.knownGene::TxDb.Mmusculus.UCSC.mm10.knownGene,
struc_Gr = rBS2ndStructure::Struc_mm10,
write_directory = "Rmdup_3T3",
gt_coord = coord_mm10
)
IUPAC
library(BSgenome)
IUPAC_CODE_MAP
knitr::opts_chunk$set(echo = TRUE)
library(BSgenome.Hsapiens.UCSC.hg19.masked)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
txdb = TxDb.Hsapiens.UCSC.hg19.knownGene
all_hg19_tx <- transcripts(txdb)
tx_views <- Views(Hsapiens,all_hg19_tx)
head(tx_views)
sum(width(all_hg19_tx))
sum(as.numeric(width(all_hg19_tx)))
sum(as.numeric(width(reduce( all_hg19_tx ))))
sum(as.numeric(width(reduce( all_hg19_tx ))))/4
all_hg19_ex <- exons(txdb)
sum(as.numeric(width(reduce( all_hg19_ex ))))/4
sum(as.numeric(width(reduce( all_hg19_tx ))))/50
sum(as.numeric(width(reduce( all_hg19_ex ))))/50
paste0("SRR",c(1744126,5248992:5248999)
)
Meth_M <- QC_se(se_M_hg19_50_N,
gr_hg19_N,
coldata_hg19[c(37:38,45:46),],
txdb = TxDb.Hsapiens.UCSC.hg19.knownGene::TxDb.Hsapiens.UCSC.hg19.knownGene,
struc_Gr = rBS2ndStructure::Struc_hg19,
write_directory = "hg19_50_sites5000",
gt_coord = coord_hg19,
min_num_M = 5000,
min_num_N = 5000
)
Fastq_directory = /home/zhen/m6A_virus/raw/
Fastq_directory = "/home/zhen/m6A_virus/raw/"
gsub("/$","",Fastq_directory)
Faseq_file_name = "SRR1234567.fastq"
Fastq_directory = "."
Fastq_file_end = ".fastq"
Faseq_file_name = "SRR1234567"
paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end)
paste0( " -U ",Fastq_directory,"/",Faseq_file_name,Fastq_file_end)
indx_directory = "/home/zhen/hisat2_idx/hg19/genome"
trim_argument
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
trim_5 = NULL
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
trim_argument
trim_5 = 10
trim_3 = 6
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
trim_argument
output_argument = paste0(Faseq_file_name,".sam")
paste0(hisat2," -p ",parallel_num, trim_argument," --tmo --no-unal")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal")
parallel_num = 8
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal")
output_argument = paste0(" -S ",Faseq_file_name,".sam")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
input_argument = paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_2",Fastq_file_end)
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
mapply()
?/home/zhen/TREW_new_data
?mapply
Rhisat2 <- function (Fastq_file_name = "SRR1234567",
indx_directory = "/home/zhen/hisat2_idx/hg19/genome",
Fastq_directory = ".",
Paired = F,
trim_5 = NULL,
trim_3 = NULL,
parallel_num = 8,
Fastq_file_end = ".fastq",)
Rhisat2 <- function (Fastq_file_name = "SRR1234567",
indx_directory = "/home/zhen/hisat2_idx/hg19/genome",
Fastq_directory = ".",
Paired = F,
trim_5 = NULL,
trim_3 = NULL,
parallel_num = 8,
Fastq_file_end = ".fastq")
{
Fastq_directory = gsub("/$","",Fastq_directory)
if (Paired) {
input_argument = paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_2",Fastq_file_end)
}
else {
input_argument = paste0( " -U ",Fastq_directory,"/",Faseq_file_name,Fastq_file_end)
}
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
output_argument = paste0(" -S ",Faseq_file_name,".sam")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
}
Rhisat2
arg_df <- data.frame(
Fastq_file_name = Rep("SRR1744126",2),
trim_5 = 16,
trim_3 = 12
)
arg_df <- data.frame(
Fastq_file_name = rep("SRR1744126",2),
trim_5 = 16,
trim_3 = 12
)
arg_df
Rhisat2 <- function (Fastq_file_name = "SRR1234567",
indx_directory = "/home/zhen/hisat2_idx/hg19/genome",
Fastq_directory = ".",
Paired = F,
trim_5 = NULL,
trim_3 = NULL,
parallel_num = 8,
Fastq_file_end = ".fastq",
output_name = Fastq_file_name)
{
Fastq_directory = gsub("/$","",Fastq_directory)
if (Paired) {
input_argument = paste0( " -1 ",Fastq_directory,"/",Faseq_file_name,"_1",Fastq_file_end," -2 ",Fastq_directory,"/",Faseq_file_name,"_2",Fastq_file_end)
}
else {
input_argument = paste0( " -U ",Fastq_directory,"/",Faseq_file_name,Fastq_file_end)
}
trim_argument = ifelse(is.null(trim_5),"",paste0(" -5 ",trim_5," -3 ",trim_3))
output_argument = paste0(" -S ",output_name,".sam")
paste0("hisat2 -p ",parallel_num, trim_argument," --tmo --no-unal -x ",indx_directory,input_argument,output_argument)
}
Rhisat2(
)
Rhisat2(
)
paste0("SRR1744126_",1:2)
arg_df <- data.frame(
Fastq_file_name = rep("SRR1744126",3),
trim_5 = c(16,16,0),
trim_3 = c(12,0,12),
output_name = paste0("SRR1744126_",1:3)
)
arg_df
library(dplyr)
apply(
arg_df,1,
function(x)
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data") #%>% Rnohup(.,paste0(x,"_hisat2") )
)
apply(
arg_df,1,colnames)
apply(
arg_df,1,function(x)x)
apply(
arg_df,1,function(x)colnames(x))
apply(
arg_df,1,function(x)rownames(x))
?Map
Map
arg_df[1,]
for(i in 1:nrow(arg_df)) {
x = arg_df[i,]
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data") %>% Rnohup(.,paste0(x,"_hisat2") )
}
for(i in 1:nrow(arg_df)) {
x = arg_df[i,]
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data") #%>% Rnohup(.,paste0(x,"_hisat2") )
}
x = arg_df[i,]
Rhisat2(Fastq_file_name = x$Fastq_file_name,
trim_5 = x$trim_5,
trim_3 = x$trim_3,
output_name = x$output_name,
Fastq_directory = "/home/zhen/TREW_new_data")
list.files()
grep("html",list.files(),value = T)
grep("html",list.files(),value = T)
gsub(".fastq","",grep(".fastq",list.files(),value = T) )
gsub(".fastq","",grep(".fastq$",list.files(),value = T) )
tune_Mismatch_MX = 4
tune_Mismatch_MN = 6
ifelse(is.null(tune_Mismatch_MX),"",paste0("--mp ",tune_Mismatch_MX,",",tune_Mismatch_MN))
head(lst_result)
package.skeleton("RbashGEO",c(lsf.str()),path = "/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing")
setwd("/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing/RbashGEO")
sapply(c("dplyr"),devtools::use_package)
WgetQC <- function (GEO_accession = "SRR1234567", Paired = F)
{
URL = paste("ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR",
substr(GEO_accession, 1, 6), GEO_accession, paste0(GEO_accession,
".sra"), sep = "/")
Wget_command = paste("wget -c -t 0", URL)
fastq_dump_command = paste0("fastq-dump ", ifelse(Paired,
"--split-3 ", ""), GEO_accession, ".sra")
if (Paired) {
fastqc_command = paste0("fastqc ", GEO_accession, "_1.fastq",
";", "fastqc ", GEO_accession, "_2.fastq")
}
else {
fastqc_command = paste0("fastqc ", GEO_accession, ".fastq")
}
paste(Wget_command, fastq_dump_command, fastqc_command, sep = ";")
}
WgetQC <- function (GEO_accession = "SRR1234567", Paired = F)
{
URL = paste("ftp://ftp-trace.ncbi.nih.gov/sra/sra-instant/reads/ByRun/sra/SRR",
substr(GEO_accession, 1, 6), GEO_accession, paste0(GEO_accession,
".sra"), sep = "/")
Wget_command = paste("wget -c -t 0", URL)
fastq_dump_command = paste0("fastq-dump ", ifelse(Paired,
"--split-3 ", ""), GEO_accession, ".sra")
if (Paired) {
fastqc_command = paste0("fastqc ", GEO_accession, "_1.fastq",
";", "fastqc ", GEO_accession, "_2.fastq")
}
else {
fastqc_command = paste0("fastqc ", GEO_accession, ".fastq")
}
rm_command = paste0("rm ", GEO_accession, ".sra")
paste(Wget_command, fastq_dump_command, rm_command, fastqc_command, sep = ";")
}
Rnohup <- function(command,output = "X") {
write(command,paste0(output,".sh"))
system(paste0("chmod +x ./", paste0(output,".sh")))
system(paste0("nohup ./",paste0(output,".sh"), ifelse(is.null(output),"",paste0(" > ",output,".out"))," &"))
}
package.skeleton("RbashGEO",c(lsf.str()),path = "/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing")
setwd("/Users/weizhen/Desktop/Research/TREW\ conservation/Package\ for\ bash\ processing/RbashGEO")
sapply(c("dplyr"),devtools::use_package)
GEO_accession = "SRR1234567"
fastq_end = ".fastq"
Paired = F
Phred_cut = 20
Phred = 33
fasqc = T
paste0("trim_galore ","--quality ",Phred_cut,"--phred",Phred," ",ifelse(fastqc,"--fastqc ",""))
fastqc = T
paste0("trim_galore ","--quality ",Phred_cut,"--phred",Phred," ",ifelse(fastqc,"--fastqc ",""))
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(fastqc," --fastqc "," "))
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(F," --fastqc "," "))
paste0("--clip_R1 ",CLIP_5[1]," --clip_R2 ",CLIP_3[1])
CLIP_5 = c(0,0)
CLIP_3 = c(0,0)
paste0("--clip_R1 ",CLIP_5[1]," --clip_R2 ",CLIP_3[1])
paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
paste0("--clip_R1 ",CLIP_5[1],
" --clip_R2 ",CLIP_5[2],
" --three_prime_clip_R1 ",CLIP_3[1],
" --three_prime_clip_R2 ",CLIP_3[2],
" ", GEO_accession,fastq_end)
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1],
" --clip_R2 ",CLIP_5[2],
" --three_prime_clip_R1 ",CLIP_3[1],
" --three_prime_clip_R2 ",CLIP_3[2],
" ", GEO_accession,"_1",fastq_end,
" ", GEO_accession,"_2",fastq_end)
Paired_dependent_chunk
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(fastqc," --fastqc "," "),Paired_dependent_chunk)
Rtrim_galore <-
function(GEO_accession = "SRR1234567",
fastq_end = ".fastq",
Paired = F,
Phred_cut = 20,
Phred = 33,
fastqc = T,
CLIP_5 = c(0,0),
CLIP_3 = c(0,0))
{
if (length(CLIP_5) == 1) CLIP_5 = c(CLIP_5,CLIP_5)
if (length(CLIP_3) == 1) CLIP_3 = c(CLIP_3,CLIP_3)
if(Paired = F){
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
}else{
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1],
" --clip_R2 ",CLIP_5[2],
" --three_prime_clip_R1 ",CLIP_3[1],
" --three_prime_clip_R2 ",CLIP_3[2],
" ", GEO_accession,"_1",fastq_end,
" ", GEO_accession,"_2",fastq_end)
}
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(fastqc," --fastqc "," "),Paired_dependent_chunk)
}
Rtrim_galore <-
function(GEO_accession = "SRR1234567",
fastq_end = ".fastq",
Paired = F,
Phred_cut = 20,
Phred = 33,
fastqc = T,
CLIP_5 = c(0,0),
CLIP_3 = c(0,0)){
if (length(CLIP_5) == 1) CLIP_5 = c(CLIP_5,CLIP_5)
if (length(CLIP_3) == 1) CLIP_3 = c(CLIP_3,CLIP_3)
if(Paired = F){
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
}else{
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1],
" --clip_R2 ",CLIP_5[2],
" --three_prime_clip_R1 ",CLIP_3[1],
" --three_prime_clip_R2 ",CLIP_3[2],
" ", GEO_accession,"_1",fastq_end,
" ", GEO_accession,"_2",fastq_end)
}
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(fastqc," --fastqc "," "),Paired_dependent_chunk)
}
Rtrim_galore <-
function(GEO_accession = "SRR1234567",
fastq_end = ".fastq",
Paired = F,
Phred_cut = 20,
Phred = 33,
fastqc = T,
CLIP_5 = c(0,0),
CLIP_3 = c(0,0)) {
if (length(CLIP_5) == 1) CLIP_5 = c(CLIP_5,CLIP_5)
if (length(CLIP_3) == 1) CLIP_3 = c(CLIP_3,CLIP_3)
if(Paired = F){
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
}else{
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1],
" --clip_R2 ",CLIP_5[2],
" --three_prime_clip_R1 ",CLIP_3[1],
" --three_prime_clip_R2 ",CLIP_3[2],
" ", GEO_accession,"_1",fastq_end,
" ", GEO_accession,"_2",fastq_end)
}
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(fastqc," --fastqc "," "),Paired_dependent_chunk)
}
Rtrim_galore <-
function(GEO_accession = "SRR1234567",
fastq_end = ".fastq",
Paired = F,
Phred_cut = 20,
Phred = 33,
fastqc = T,
CLIP_5 = c(0,0),
CLIP_3 = c(0,0)) {
if (length(CLIP_5) == 1) CLIP_5 = c(CLIP_5,CLIP_5)
if (length(CLIP_3) == 1) CLIP_3 = c(CLIP_3,CLIP_3)
if(Paired == F){
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1]," --three_prime_clip_R1 ",CLIP_3[1]," ", GEO_accession,fastq_end)
}else{
Paired_dependent_chunk <- paste0("--clip_R1 ",CLIP_5[1],
" --clip_R2 ",CLIP_5[2],
" --three_prime_clip_R1 ",CLIP_3[1],
" --three_prime_clip_R2 ",CLIP_3[2],
" ", GEO_accession,"_1",fastq_end,
" ", GEO_accession,"_2",fastq_end)
}
paste0("trim_galore ","--quality ",Phred_cut," --phred",Phred,ifelse(fastqc," --fastqc "," "),Paired_dependent_chunk)
}
Rtrim_galore()
Rtrim_galore(Paired = F)
Rtrim_galore(Paired = T)
Rtrim_galore(Paired = T)
knitr::opts_chunk$set(echo = TRUE)
library(RbashGEO)
?WgetQC
BS_design <- read.csv("BS-design.csv")
BS_design$SRR_RUN
BS_design[1,]
knitr::opts_chunk$set(echo = TRUE)
#Feature 4. Start 50bp of the last exon.
exonsBy(txdb,by = "gene")
exonby
?exonsBy
exbytx_txdb <- exonsBy(txdb,by = "tx")
library(GenomicFeatures)
exbytx_txdb <- exonsBy(txdb,by = "tx")
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(BSgenome.Hsapiens.UCSC.hg19)
require(phastCons100way.UCSC.hg19)
require(fitCons.UCSC.hg19)
require(rBS2ndStructure)
require(dplyr)
txdb = TxDb.Hsapiens.UCSC.hg19.knownGene
exbytx_txdb <- exonsBy(txdb,by = "tx")
exbytx_txdb[[1]]
head(unlist(exbytx_txdb))
exbytx_unlist <- unlist(exbytx_txdb)
exbytx_unlist
head(exbytx_unlist$exon_rank)
ex_rank_vec <- exbytx_unlist$exon_rank
names(ex_rank_vec) = 1:length(ex_rank_vec)
head(ex_rank_vec)
last_ex <- lapply(exbytx_txdb, function(gr) gr[ which.max(gr$exon_rank)] )
tapply(ex_rank_vec, names(exbytx_unlist), function(x) names(x)[which.max(x)] )
last_ex_idx <- tapply(ex_rank_vec, names(exbytx_unlist), function(x) names(x)[which.max(x)] )
class(last_ex_idx)
head(last_ex_idx)
head(exbytx_unlist)
exbytx_unlist[as.numeric( last_ex_idx )]
exbytx_unlist
exbytx_unlist[names(exbytx_unlist)]
names(exbytx_unlist)
last_exons <- exbytx_unlist[as.numeric( last_ex_idx )]
last_exons
exbytx_unlist["10"]
exbytx_unlist
exbytx_unlist[c("10","11")]
exbytx_unlist[c("10","11")]
exbytx_unlist[c("9","10","11")]
exbytx_unlist[c("8","9","10","11")]
last_exons_50bp <- resize(last_exons,50,fix = "start")
last_exons_50bp <- resize(last_exons,50,fix = "start")
Feature_matrix$last_exons_50bp <- GR_hg19%over%last_exons_50bp
se_combinded <- readRDS("/Users/zhenwei/Documents/GitHub/TREW-cons/D_InfMerge_2017_12_17/se_combinded.rds")
rowRanges_combinded <- rowRanges(se_combinded)
library(SummarizedExperiment)
se_combinded <- readRDS("/Users/zhenwei/Documents/GitHub/TREW-cons/D_InfMerge_2017_12_17/se_combinded.rds")
rowRanges_combinded <- rowRanges(se_combinded)
Reduce_snt <- function(row_gr){
tssa_idx <- grepl("tssa", mcols(row_gr)[,1])
c(row_gr[!tssa_idx] - 50,resize( row_gr[tssa_idx] , 1, fix = "start"))
}
rowRanges_combinded <- Reduce_snt(rowRanges_combinded)
GR_hg19 = rowRanges_combinded
genes_txdb <- genes(txdb)
Feature_matrix = data.frame(Gene_length_all = Properties_mapp(query_gr = GR_hg19,
feature_gr = genes_txdb,
feature_properties = width(genes_txdb)))
Properties_mapp <- function(query_gr, feature_gr, feature_properties, no_map_val = NA) {
fol <- findOverlaps(query_gr,feature_gr)
return_vec <- rep(no_map_val,length(query_gr))
features_mapped <- feature_properties[subjectHits(fol)]
if(is.logical(feature_properties)) {
Weighted_vec  <- tapply(features_mapped, queryHits(fol), any)
}else{
Weighted_vec <- tapply(features_mapped, queryHits(fol), mean)
}
return_vec[ as.numeric( names(Weighted_vec) )] <- Weighted_vec
return_vec
}
require(TxDb.Hsapiens.UCSC.hg19.knownGene)
require(BSgenome.Hsapiens.UCSC.hg19)
require(phastCons100way.UCSC.hg19)
require(fitCons.UCSC.hg19)
require(rBS2ndStructure)
require(dplyr)
txdb = TxDb.Hsapiens.UCSC.hg19.knownGene
#Feature 1. Gene length all.
genes_txdb <- genes(txdb)
Feature_matrix = data.frame(Gene_length_all = Properties_mapp(query_gr = GR_hg19,
feature_gr = genes_txdb,
feature_properties = width(genes_txdb)))
exbg_txdb <- exonsBy(txdb,by = "gene")
#Feature 2. Gene length exons.
Feature_matrix$Gene_length_ex <- Properties_mapp(query_gr = GR_hg19,
feature_gr = exbg_txdb,
feature_properties = sum(width(exbg_txdb)))
#Feature 3. 5'Cap m6Am (TSS 1nt with A).
TSS <- transcripts(txdb) %>% resize(.,1,fix = "start")
A_idx <- vcountPattern("A", DNAStringSet( Views(Hsapiens, TSS))) > 0
Feature_matrix$m6Am <- GR_hg19%over%TSS[A_idx]
#Feature 4. Start 50bp of the last exon.
exbytx_txdb <- exonsBy(txdb,by = "tx")
exbytx_unlist <- unlist(exbytx_txdb)
ex_rank_vec <- exbytx_unlist$exon_rank
names(ex_rank_vec) = 1:length(ex_rank_vec)
last_ex_idx <- tapply(ex_rank_vec, names(exbytx_unlist), function(x) names(x)[which.max(x)] )
last_exons <- exbytx_unlist[as.numeric( last_ex_idx )]
last_exons_50bp <- resize(last_exons,50,fix = "start")
Feature_matrix$last_exons_50bp <- GR_hg19%over%last_exons_50bp
}
mean(Feature_matrix$last_exons_50bp)
gtcoord_hg19 <- readRDS("/Users/zhenwei/Datasets/Gtcoords/Gtcoord_hg19.rds")
?GuitarPlot
Guitar::GuitarPlot(last_exons_50bp,gtcoord_hg19,saveToPDFprefix = "Last_ex_50bp")
Guitar::GuitarPlot(list(last_exons_50bp),gtcoord_hg19,saveToPDFprefix = "Last_ex_50bp")
Guitar::GuitarPlot(list(Last_exons_50bp = last_exons_50bp),gtcoord_hg19,saveToPDFprefix = "Last_ex_50bp")
UTR3 <- threeUTRsByTranscript(txdb)
hist( sum(width(UTR3)) )
hist( log(sum(width(UTR3)) ))
hist( log(width(exons(txdb)) ))
